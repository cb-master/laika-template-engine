name: CI Pipeline

on:
  push:
    branches: [ beta ]
    tags-ignore: [ '*' ]
  workflow_dispatch:

jobs:
  ########################################################
  # 1️⃣ TEST SUITE
  ########################################################
  test:
    name: Run Tests (PHP ${{ matrix.php-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.1']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, json, dom
          coverage: xdebug
          tools: composer

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Run Test Suite
        run: composer test

  ########################################################
  # 2️⃣ STATIC ANALYSIS & LINTING
  ########################################################
  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          tools: composer

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Run PHP CS Fixer (dry run)
        run: |
          composer global require friendsofphp/php-cs-fixer
          ~/.composer/vendor/bin/php-cs-fixer fix --dry-run --diff src

      - name: Run PHPStan static analysis
        run: |
          composer require --dev phpstan/phpstan
          vendor/bin/phpstan analyse src --level=max

  ########################################################
  # 3️⃣ BUILD & RELEASE
  ########################################################
  release:
    name: Build & Release
    runs-on: ubuntu-latest
    needs: [lint]

    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/beta'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          tools: composer

      - name: Install dependencies (no dev)
        run: composer install --no-dev --prefer-dist --no-progress

      - name: Prepare release artifact
        run: |
          mkdir build
          cp -r src composer.json LICENSE README.md build/
          cd build && zip -r ../laika-template-engine.zip .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: "Laika Template Engine v${{ github.run_number }}"
          body: "Automated release build."
          files: laika-template-engine.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}