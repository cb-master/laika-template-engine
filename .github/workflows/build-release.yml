name: CI Pipeline

on:
  push:
    branches: [ main, beta ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main, beta ]
  workflow_dispatch:

jobs:
  ########################################################
  # 1/ TEST SUITE
  ########################################################
  test:
    name: Run Tests (PHP ${{ matrix.php-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.1','8.2','8.3']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: |
            vendor
            ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, json, dom
          coverage: xdebug
          tools: composer

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Run Test Suite
        run: composer test


  ########################################################
  # 2/ STATIC ANALYSIS & LINTING
  ########################################################
  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: |
            vendor
            ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          tools: composer

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Run PHP CS Fixer (dry run)
        run: |
          composer global require friendsofphp/php-cs-fixer
          ~/.composer/vendor/bin/php-cs-fixer fix --dry-run --diff src


  ########################################################
  # 3/ BUILD & RELEASE
  ########################################################
  release:
    name: Build & Release
    runs-on: ubuntu-latest
    needs: [lint]
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: |
            vendor
            ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          tools: composer

      - name: Install dependencies (no dev)
        run: composer install --no-dev --prefer-dist --no-progress

      - name: Prepare release artifact
        run: |
          mkdir build
          cp -r src composer.json LICENSE README.md build/
          echo "v${{ github.run_number }}" > build/VERSION
          cd build && zip -r ../laika-template-engine.zip .

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: laika-template-engine
          path: laika-template-engine.zip

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: "Laika Template Engine v${{ github.run_number }}"
          body: "Automated release build."
          files: laika-template-engine.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}